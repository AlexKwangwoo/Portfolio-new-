/* Global */

:root {
  /* Color */
  --color-white: #ffffff;
  --color-light-white: #eeeeee;
  --color-dark-white: #bdbdbd;
  --color-pink: #fe918d;
  --color-dark-pink: #ff6863;
  --color-dark-grey: #4d4d4d;
  --color-grey: #616161;
  --color-light-grey: #7c7979;
  --color-blue: #73aace;
  --color-yellow: #fff7d1;
  --color-orange: #feb546;
  --color-black: #000000;
  --color-light-yellow: #fabb50;

  /* Font size */
  --font-large: 48px;
  --font-medium: 22px;
  --font-regular: 16px;
  --font-small: 14px;
  --font-micro: 12px;

  /* Font weight */
  --weight-bold: 700;
  --weight-semi-bold: 600;
  --weight-regular: 400;

  /* Size */
  --size-border-radius: 4px;

  /* Animation*/
  --animation-duration: 300ms;
}

/* Universal tags */
* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Open Sans', sans-serif;
  cursor: default;
  /* 이거 설정안해주면 글자위에서 커서가 생긴다!! */

}

a {
  text-decoration: none;
  color: var(--color-white);
}

ul {
  list-style: none;
  padding-left: 0;
}

/* Typography */

h1 {
  font-size: var(--font-large);
  font-weight: var(--weight-bold);
  color: var(--color-black);
  margin: 16px 0px;
}

h2 {
  font-size: var(--font-medium);
  font-weight: var(--weight-semi-bold);
  color: var(--color-black);
  margin: 8px 0;
}

h3 {
  font-size: var(--font-regular);
  font-weight: var(--weight-regular);
  color: var(--color-black);
  margin: 8px 0;
}

p {
  font-size: var(--font-regular);
  font-weight: var(--weight-regular);
  color: var(--color-black);
  margin: 4px 0;
}

button {
  background-color: transparent;
  cursor: pointer;
  border: none;
  outline: none;
}

/* Navbar */
#navbar {
  padding: 16px;
  display: flex;
  justify-content: space-between;
  background-color: var(--color-light-yellow);
  align-items: center;
  color: var(--color-white);
}

.navbar__logo {
  font-size: var(--font-medium);
  font-weight: var(--weight-semi-bold);
}

.navbar__menu {
  display: flex;
}

.navbar__menu__item {
  padding: 8px 12px;
  margin: 0 4px;
  cursor: pointer;
  border-radius: var(--size-border-radius);
}

/* 
html 에서 class 이름 뒤에 active 쓰고
css 에서는 .~~~.active라고 쓰면 된다!
*/

.navbar__menu__item.active {
  border: 1px solid var(--color-yellow);
}

.navbar__menu__item:hover {
  background-color: var(--color-dark-pink);
}

/* Home */
#home {
  background: url('img/MyBack.png') center/cover no-repeat;
  padding: 40px;
  text-align: center;
}

.home__avatar {
  width: 250px;
  height: 250px;
  border-radius: 50%;
  border: 2px solid var(--color-light-white);
}

.home__title,
.home__description {
  color: var(--color-white);
}

.home__contact {
  color: var(--color-white);
  font-size: var(--font-regular);
  font-weight: var(--weight-bold);
  margin: 24px;
  padding: 8px 12px;
  border: 2px solid var(--color-white);
  border-radius: var(--size-border-radius);
}

/* Section common */
.section {
  padding: 50px;
  text-align: center;
  margin: auto;
}

.section__container {
  max-width: 1200px;
  margin: auto;
}

/* About */
.major {
  width: 220px;
}

.about__majors {
  display: flex;
  justify-content: space-around;
  margin: 80px 0;
}

.major__icon {
  margin: auto;
  width: 170px;
  height: 170px;
  line-height: 170px;
  /* 폰트 높이만큼 라인 하이트를 줘서 상자 가운데로 오게 만든다! */

  font-size: 70px;
  /* i -> option 폰트도 다 폰트 사이즈다!! */

  border: 1px solid var(--color-blue);
  border-radius: 50%;
  color: var(--color-blue);
}

/* .major__icon i:hover 이렇게되면 i마우스를 올릴때만 움직이는데 
밑에 처럼 하게되면 hover는 동그라미 전체에 적용되지만.. 움직이는건 i만된다!
*/
.major__icon:hover i {
  color: var(--color-pink);
  transform: rotate(-30deg) scale(1.1);
}

.major__icon i {
  transition: var(--animation-duration);
}

.major__title,
.major__description {
  color: var(--color-dark-grey);
}

.major__description {
  font-size: var(--font-small);
}

.job {
  /* display: flex; */
  /* align-items: center; */
  margin-bottom: 50px;
}

.job__description {
  margin: 0 16px;
  text-align: center;
}

.job__name,
.job__period {
  font-size: var(--color-light-grey);
}

.job__name {
  font-size: var(--font-small);
}

.job__period {
  font-size: var(--font-micro);
}


#job__logo1 {
  width: 150px;
  height: 150px;

}

#job__logo2 {
  width: 150px;
  height: 50px;

}

/* Skill */

#skills {
  background-color: var(--color-yellow);
}

.skillset {
  display: flex;
  background-color: var(--color-light-grey);
  color: var(--color-light-white);
  margin: 20px;
}

.skillset__title {
  font-size: var(--font-medium);
  color: var(--color-white);
}


/* 
.skillset__left,
.skillset__right {
flex-grow: 1;
}  해도 딱히 문제없음
*/
.skillset__left {
  flex-basis: 60%;
  background-color: var(--color-dark-grey);
  padding: 20px 40px;
}

.skillset__right {
  flex-basis: 40%;
}

.tools {
  background-color: var(--color-grey);
}

.skill__description {
  display: flex;
  justify-content: space-between;
}

.skill {
  margin-bottom: 28px;
}

.skill__bar {
  width: 100%;
  height: 3px;
  background-color: var(--color-grey);
}

.skill__value {
  height: 3px;
  background-color: var(--color-orange);
}

.tools,
.etc {
  padding: 20px;
}


/* Work */

.category__btn {
  border: 1px solid var(--color-dark-white);
  border-radius: var(--size-border-radius);
  font-size: var(--font-regular);
  padding: 8px 48px;
}

.work__categories {
  margin: 40px;
}

.category__btn.active,
.category__btn:hover {
  background-color: var(--color-pink);
  color: var(--color-white);
}


/* active는 항상 보여야해서 opacity를 1로 준다! 
    이것의 해석은.. 카테고리 버튼이 액티브일때의 카테고리 카운트 and
    카테고리 버튼에 호버가왔을때 카테고리 카운트가 투명도가 1이된다!
*/
.category__btn.active .category__count,
.category__btn:hover .category__count {
  opacity: 1;
  top: 0;
}


.category__count {
  background-color: var(--color-orange);
  border: 1px solid var(--color-orange);
  border-radius: 50%;
  color: var(--color-white);
  width: 24px;
  height: 24px;
  line-height: 24px;
  display: inline-block;
  position: relative;
  top: -20px;
  left: 4px;
  opacity: 0;
  transition: all var(--animation-duration) ease-in;
}

.work__projects {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}


/* 프로젝트 description들을 위해서 프로젝트가 포지션을 relative로 잡혀준다
그래야 제내들이 바디까지 도망안간다.. 왜냐하면 자식이 absolute 포지션이 되어버리면
relative나 absolute 포지션을 찾게되기 때문이다 */
.project {
  position: relative;
  width: 280px;
  height: 250px;
  margin: 2px;
  background-color: var(--color-white);
  display: flex;
  justify-content: center;
  align-items: center;
}


/* project 안에 담겨있는 img들은 project안의 상자안에어서만
움직여야함으로 max 크기를 주면 된다!! */
.project__img {
  max-width: 100%;
  max-height: 100%;
}


/* Y축 10정도를 내린다. 그다음 호버했을때 0으로 되돌리면
마치 밑에서 올라오는것 처럼 보인다 */
.project__description {
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: absolute;
  background-color: var(--color-black);
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 0;
  transform: translateY(10px);
  transition: all var(--animation-duration) ease-in;
}

.project:hover .project__description {
  transform: translateY(0px);
  opacity: 0.8;
}


/* Description 에서 설정을 해주지만..
맨위에서 h3(좀더 작은 단위) 의 색이 정이 되었기 때문에 다시 설정 해줘야한다 */
.project__description h3 {
  color: var(--color-white);
}

.project__description h3:after {
  content: "";
  display: block;
  width: 40px;
  height: 2px;
  background-color: var(--color-dark-white);
  position: relative;
  left: 50%;
  margin-left: -12px;
  margin-top: 8px;
}